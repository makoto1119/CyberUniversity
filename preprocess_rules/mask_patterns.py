#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
マスキング処理用の正規表現パターン定義
より正確な個人情報検出のための改善版パターン
"""

def get_name_patterns():
    """日本語名と英語名のパターン"""
    return [
        # 日本人名パターン
        r'[一-龥]{1,2}[一-龥々]{1,2}(さん|様)?',  # 基本的な日本人名
        r'[一-龥]{1,2}[一-龥々]{1,2}[一-龥]{1,2}',  # 長めの名前
        r'[一-龥々]+\s*[一-龥々]+',  # スペースを含む可能性のある名前
        
        # 英語名パターン
        r'[A-Z][a-z]+\s+[A-Z][a-z]+',  # 基本的な英語名
        r'[A-Z][a-z]+\s+[A-Z]\.?\s+[A-Z][a-z]+',  # ミドルネームを含む
    ]

#def get_name_patterns():
#    return [
#        # 人名らしい文字列のみをマッチ
#        r'[一-龥々]{1,2}[一-龥々]{1,2}(さん|様)(?![一-龥])',  # 「さん/様」付きの名前
#        r'[A-Z][a-z]+\s+[A-Z][a-z]+',  # 英語名
#        # 文脈を考慮した人名パターン
#        r'(?:氏名|名前|担当)[:：]\s*[一-龥々]{2,4}',  # 「氏名：」の後の名前
#    ]

def get_email_patterns():
    """メールアドレスのパターン"""
    return [
        # 標準的なメールアドレス
        r'[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}',
        
        # 日本語ドメインを含むメールアドレス
        r'[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}(\.[a-zA-Z]{2,})?',
        
        # 引用符で囲まれたメールアドレス
        r'[\'"][a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}[\'"]',
    ]

def get_company_patterns():
    """企業名のパターン"""
    return [
        # 日本の会社形態
        r'(株式会社|有限会社|合同会社|合資会社)[^\s\n　]{1,20}',
        r'[^\s\n　]{1,20}(株式会社|有限会社|合同会社|合資会社)',
        
        # カタカナ企業名
        r'[ァ-ヶー]+\s*(株式会社|有限会社|合同会社)',
        
        # 英語の会社形態
        r'[A-Za-z0-9\s,]+\s+(Inc\.|LLC|Ltd\.|Corporation|Corp\.|Co\.,\s+Ltd\.)',
        
        # 略称
        r'[A-Za-z]+[株|㈱]',
    ]

#def get_company_patterns():
#    return [
#        r'(?:株式会社|有限会社|合同会社)[一-龥々A-Za-z0-9]{2,10}',  # 会社形態+社名
#        r'[一-龥々A-Za-z0-9]{2,10}(?:株式会社|有限会社|合同会社)',  # 社名+会社形態
#        r'[Ａ-Ｚａ-ｚ]+[株|㈱]',  # アルファベット+株
#        r'[ァ-ヶー]+(?:株式会社|有限会社|合同会社)',  # カタカナ社名
#    ]

def get_url_patterns():
    """URLのパターン"""
    return [
        # 標準的なURL
        r'https?://[\w/:%#\$&\?\(\)~\.=\+\-]+',
        
        # www.で始まるURL
        r'www\.[\w/:%#\$&\?\(\)~\.=\+\-]+',
        
        # セキュアなURL
        r'https://[\w/:%#\$&\?\(\)~\.=\+\-]+',
        
        # クエリパラメータを含むURL
        r'https?://[\w-]+\.[\w/:%#\$&\?\(\)~\.=\+\-]+\?[\w=&\+%]+',
    ]

def get_profile_patterns():
    """プロフィール情報のパターン"""
    return [
        # 年齢と性別
        r'\d{1,3}歳[/／](男性|女性|男|女)',
        r'(男性|女性|男|女)[/／]\d{1,3}歳',
        
        # 生年月日
        r'(昭和|平成|令和)\d{1,2}年\d{1,2}月\d{1,2}日',
        r'\d{4}[-/／]\d{1,2}[-/／]\d{1,2}',
        
        # 住所（都道府県と市区町村）
        r'[東京都|北海道|大阪府|京都府|.{2,3}県][^(\s\n　)]{2,20}[市区町村]',
        
        # 電話番号
        r'\d{2,4}[-ー]\d{2,4}[-ー]\d{3,4}',
        r'(\+81|0)\d{1,4}[-ー]\d{1,4}[-ー]\d{3,4}',
    ]

def get_all_patterns():
    """全てのパターンを辞書形式で返す"""
    return {
        'NAME': get_name_patterns(),
        'EMAIL': get_email_patterns(),
        'COMPANY': get_company_patterns(),
        'URL': get_url_patterns(),
        'PROFILE': get_profile_patterns()
    }
